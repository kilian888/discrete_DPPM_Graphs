| 07-01 16:44:53 EXPERIMENT BEGIN: 
| 07-01 16:44:53 logging into exp/gridsearch/edp-gnn_ego_18_small__Jul-01-16-44-53_15190/info.log
| 07-01 16:44:53 load dataset: ego_small
200
| 07-01 16:44:56 model: EdgeDensePredictionGraphScoreNetwork(
  (gnn_list): ModuleList(
    (0): EdgeDensePredictionGNNLayer(
      (multi_channel_gnn_module): GIN(
        (linear_prediction): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=3, out_features=32, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=32, out_features=16, bias=True)
          )
          (1): Sequential(
            (0): Linear(in_features=16, out_features=32, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=32, out_features=16, bias=True)
          )
          (2): Sequential(
            (0): Linear(in_features=16, out_features=32, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=32, out_features=16, bias=True)
          )
          (3): Sequential(
            (0): Linear(in_features=16, out_features=32, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=32, out_features=16, bias=True)
          )
          (4): Sequential(
            (0): Linear(in_features=16, out_features=32, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=32, out_features=16, bias=True)
          )
          (5): Sequential(
            (0): Linear(in_features=16, out_features=32, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=32, out_features=16, bias=True)
          )
          (6): Sequential(
            (0): Linear(in_features=16, out_features=32, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=32, out_features=16, bias=True)
          )
        )
        (layers): ModuleList(
          (0): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=6, out_features=32, bias=True)
              (1): Linear(in_features=32, out_features=16, bias=True)
            )
          )
          (1): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Linear(in_features=32, out_features=16, bias=True)
            )
          )
          (2): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Linear(in_features=32, out_features=16, bias=True)
            )
          )
          (3): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Linear(in_features=32, out_features=16, bias=True)
            )
          )
          (4): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Linear(in_features=32, out_features=16, bias=True)
            )
          )
          (5): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=32, bias=True)
              (1): Linear(in_features=32, out_features=16, bias=True)
            )
          )
        )
      )
      (translate_mlp): MLP(
        (linears): ModuleList(
          (0): Linear(in_features=34, out_features=4, bias=True)
          (1): Linear(in_features=4, out_features=4, bias=True)
          (2): Linear(in_features=4, out_features=2, bias=True)
        )
        (batch_norms): ModuleList(
          (0): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (cond_layers): ModuleList(
          (0): ConditionalLayer1d()
          (1): ConditionalLayer1d()
        )
      )
    )
    (1): EdgeDensePredictionGNNLayer(
      (multi_channel_gnn_module): GIN(
        (linear_prediction): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=18, out_features=36, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=36, out_features=16, bias=True)
          )
          (1): Sequential(
            (0): Linear(in_features=16, out_features=36, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=36, out_features=16, bias=True)
          )
          (2): Sequential(
            (0): Linear(in_features=16, out_features=36, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=36, out_features=16, bias=True)
          )
          (3): Sequential(
            (0): Linear(in_features=16, out_features=36, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=36, out_features=16, bias=True)
          )
          (4): Sequential(
            (0): Linear(in_features=16, out_features=36, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=36, out_features=16, bias=True)
          )
          (5): Sequential(
            (0): Linear(in_features=16, out_features=36, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=36, out_features=16, bias=True)
          )
          (6): Sequential(
            (0): Linear(in_features=16, out_features=36, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=36, out_features=16, bias=True)
          )
        )
        (layers): ModuleList(
          (0): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=36, out_features=36, bias=True)
              (1): Linear(in_features=36, out_features=16, bias=True)
            )
          )
          (1): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=36, bias=True)
              (1): Linear(in_features=36, out_features=16, bias=True)
            )
          )
          (2): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=36, bias=True)
              (1): Linear(in_features=36, out_features=16, bias=True)
            )
          )
          (3): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=36, bias=True)
              (1): Linear(in_features=36, out_features=16, bias=True)
            )
          )
          (4): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=36, bias=True)
              (1): Linear(in_features=36, out_features=16, bias=True)
            )
          )
          (5): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=32, out_features=36, bias=True)
              (1): Linear(in_features=36, out_features=16, bias=True)
            )
          )
        )
      )
      (translate_mlp): MLP(
        (linears): ModuleList(
          (0): Linear(in_features=34, out_features=8, bias=True)
          (1): Linear(in_features=8, out_features=8, bias=True)
          (2): Linear(in_features=8, out_features=4, bias=True)
        )
        (batch_norms): ModuleList(
          (0): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (cond_layers): ModuleList(
          (0): ConditionalLayer1d()
          (1): ConditionalLayer1d()
        )
      )
    )
    (2): EdgeDensePredictionGNNLayer(
      (multi_channel_gnn_module): GIN(
        (linear_prediction): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=20, out_features=40, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=40, out_features=32, bias=True)
          )
          (1): Sequential(
            (0): Linear(in_features=16, out_features=40, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=40, out_features=32, bias=True)
          )
          (2): Sequential(
            (0): Linear(in_features=16, out_features=40, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=40, out_features=32, bias=True)
          )
          (3): Sequential(
            (0): Linear(in_features=16, out_features=40, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=40, out_features=32, bias=True)
          )
          (4): Sequential(
            (0): Linear(in_features=16, out_features=40, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=40, out_features=32, bias=True)
          )
          (5): Sequential(
            (0): Linear(in_features=16, out_features=40, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=40, out_features=32, bias=True)
          )
          (6): Sequential(
            (0): Linear(in_features=16, out_features=40, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=40, out_features=32, bias=True)
          )
        )
        (layers): ModuleList(
          (0): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=80, out_features=40, bias=True)
              (1): Linear(in_features=40, out_features=16, bias=True)
            )
          )
          (1): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=64, out_features=40, bias=True)
              (1): Linear(in_features=40, out_features=16, bias=True)
            )
          )
          (2): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=64, out_features=40, bias=True)
              (1): Linear(in_features=40, out_features=16, bias=True)
            )
          )
          (3): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=64, out_features=40, bias=True)
              (1): Linear(in_features=40, out_features=16, bias=True)
            )
          )
          (4): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=64, out_features=40, bias=True)
              (1): Linear(in_features=40, out_features=16, bias=True)
            )
          )
          (5): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=64, out_features=40, bias=True)
              (1): Linear(in_features=40, out_features=16, bias=True)
            )
          )
        )
      )
      (translate_mlp): MLP(
        (linears): ModuleList(
          (0): Linear(in_features=68, out_features=16, bias=True)
          (1): Linear(in_features=16, out_features=16, bias=True)
          (2): Linear(in_features=16, out_features=8, bias=True)
        )
        (batch_norms): ModuleList(
          (0): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (cond_layers): ModuleList(
          (0): ConditionalLayer1d()
          (1): ConditionalLayer1d()
        )
      )
    )
    (3): EdgeDensePredictionGNNLayer(
      (multi_channel_gnn_module): GIN(
        (linear_prediction): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=40, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=64, bias=True)
          )
          (1): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=64, bias=True)
          )
          (2): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=64, bias=True)
          )
          (3): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=64, bias=True)
          )
          (4): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=64, bias=True)
          )
          (5): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=64, bias=True)
          )
          (6): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=64, bias=True)
          )
        )
        (layers): ModuleList(
          (0): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=320, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (1): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (2): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (3): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (4): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (5): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
        )
      )
      (translate_mlp): MLP(
        (linears): ModuleList(
          (0): Linear(in_features=136, out_features=32, bias=True)
          (1): Linear(in_features=32, out_features=32, bias=True)
          (2): Linear(in_features=32, out_features=16, bias=True)
        )
        (batch_norms): ModuleList(
          (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (cond_layers): ModuleList(
          (0): ConditionalLayer1d()
          (1): ConditionalLayer1d()
        )
      )
    )
    (4): EdgeDensePredictionGNNLayer(
      (multi_channel_gnn_module): GIN(
        (linear_prediction): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=80, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=64, bias=True)
          )
          (1): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=64, bias=True)
          )
          (2): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=64, bias=True)
          )
          (3): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=64, bias=True)
          )
          (4): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=64, bias=True)
          )
          (5): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=64, bias=True)
          )
          (6): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=64, bias=True)
          )
        )
        (layers): ModuleList(
          (0): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=1280, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (1): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (2): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (3): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (4): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (5): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
        )
      )
      (translate_mlp): MLP(
        (linears): ModuleList(
          (0): Linear(in_features=144, out_features=32, bias=True)
          (1): Linear(in_features=32, out_features=32, bias=True)
          (2): Linear(in_features=32, out_features=16, bias=True)
        )
        (batch_norms): ModuleList(
          (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (cond_layers): ModuleList(
          (0): ConditionalLayer1d()
          (1): ConditionalLayer1d()
        )
      )
    )
    (5): EdgeDensePredictionGNNLayer(
      (multi_channel_gnn_module): GIN(
        (linear_prediction): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=80, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=32, bias=True)
          )
          (1): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=32, bias=True)
          )
          (2): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=32, bias=True)
          )
          (3): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=32, bias=True)
          )
          (4): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=32, bias=True)
          )
          (5): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=32, bias=True)
          )
          (6): Sequential(
            (0): Linear(in_features=16, out_features=160, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=160, out_features=32, bias=True)
          )
        )
        (layers): ModuleList(
          (0): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=1280, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (1): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (2): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (3): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (4): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
          (5): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=256, out_features=160, bias=True)
              (1): Linear(in_features=160, out_features=16, bias=True)
            )
          )
        )
      )
      (translate_mlp): MLP(
        (linears): ModuleList(
          (0): Linear(in_features=80, out_features=32, bias=True)
          (1): Linear(in_features=32, out_features=32, bias=True)
          (2): Linear(in_features=32, out_features=8, bias=True)
        )
        (batch_norms): ModuleList(
          (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (cond_layers): ModuleList(
          (0): ConditionalLayer1d()
          (1): ConditionalLayer1d()
        )
      )
    )
    (6): EdgeDensePredictionGNNLayer(
      (multi_channel_gnn_module): GIN(
        (linear_prediction): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=40, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=16, bias=True)
          )
          (1): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=16, bias=True)
          )
          (2): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=16, bias=True)
          )
          (3): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=16, bias=True)
          )
          (4): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=16, bias=True)
          )
          (5): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=16, bias=True)
          )
          (6): Sequential(
            (0): Linear(in_features=16, out_features=80, bias=True)
            (1): LeakyReLU(negative_slope=0.01)
            (2): Linear(in_features=80, out_features=16, bias=True)
          )
        )
        (layers): ModuleList(
          (0): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=320, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (1): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (2): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (3): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (4): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
          (5): MLP(
            (linears): ModuleList(
              (0): Linear(in_features=128, out_features=80, bias=True)
              (1): Linear(in_features=80, out_features=16, bias=True)
            )
          )
        )
      )
      (translate_mlp): MLP(
        (linears): ModuleList(
          (0): Linear(in_features=40, out_features=16, bias=True)
          (1): Linear(in_features=16, out_features=16, bias=True)
          (2): Linear(in_features=16, out_features=4, bias=True)
        )
        (batch_norms): ModuleList(
          (0): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (cond_layers): ModuleList(
          (0): ConditionalLayer1d()
          (1): ConditionalLayer1d()
        )
      )
    )
  )
  (final_read_score): MLP(
    (linears): ModuleList(
      (0): Linear(in_features=60, out_features=120, bias=True)
      (1): Linear(in_features=120, out_features=120, bias=True)
      (2): Linear(in_features=120, out_features=1, bias=True)
    )
    (cond_layers): ModuleList(
      (0): ConditionalLayer1d()
      (1): ConditionalLayer1d()
    )
  )
)
| 07-01 16:44:56 Parameters: 
gnn_list.0.multi_channel_gnn_module.eps ........................................................................ torch.Size([6])
gnn_list.0.multi_channel_gnn_module.linear_prediction.0.0.weight ........................................... torch.Size([32, 3])
gnn_list.0.multi_channel_gnn_module.linear_prediction.0.0.bias ................................................ torch.Size([32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.0.2.weight .......................................... torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.0.2.bias ................................................ torch.Size([16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.1.0.weight .......................................... torch.Size([32, 16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.1.0.bias ................................................ torch.Size([32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.1.2.weight .......................................... torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.1.2.bias ................................................ torch.Size([16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.2.0.weight .......................................... torch.Size([32, 16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.2.0.bias ................................................ torch.Size([32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.2.2.weight .......................................... torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.2.2.bias ................................................ torch.Size([16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.3.0.weight .......................................... torch.Size([32, 16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.3.0.bias ................................................ torch.Size([32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.3.2.weight .......................................... torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.3.2.bias ................................................ torch.Size([16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.4.0.weight .......................................... torch.Size([32, 16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.4.0.bias ................................................ torch.Size([32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.4.2.weight .......................................... torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.4.2.bias ................................................ torch.Size([16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.5.0.weight .......................................... torch.Size([32, 16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.5.0.bias ................................................ torch.Size([32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.5.2.weight .......................................... torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.5.2.bias ................................................ torch.Size([16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.6.0.weight .......................................... torch.Size([32, 16])
gnn_list.0.multi_channel_gnn_module.linear_prediction.6.0.bias ................................................ torch.Size([32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.6.2.weight .......................................... torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.linear_prediction.6.2.bias ................................................ torch.Size([16])
gnn_list.0.multi_channel_gnn_module.layers.0.linears.0.weight .............................................. torch.Size([32, 6])
gnn_list.0.multi_channel_gnn_module.layers.0.linears.0.bias ................................................... torch.Size([32])
gnn_list.0.multi_channel_gnn_module.layers.0.linears.1.weight ............................................. torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.layers.0.linears.1.bias ................................................... torch.Size([16])
gnn_list.0.multi_channel_gnn_module.layers.1.linears.0.weight ............................................. torch.Size([32, 32])
gnn_list.0.multi_channel_gnn_module.layers.1.linears.0.bias ................................................... torch.Size([32])
gnn_list.0.multi_channel_gnn_module.layers.1.linears.1.weight ............................................. torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.layers.1.linears.1.bias ................................................... torch.Size([16])
gnn_list.0.multi_channel_gnn_module.layers.2.linears.0.weight ............................................. torch.Size([32, 32])
gnn_list.0.multi_channel_gnn_module.layers.2.linears.0.bias ................................................... torch.Size([32])
gnn_list.0.multi_channel_gnn_module.layers.2.linears.1.weight ............................................. torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.layers.2.linears.1.bias ................................................... torch.Size([16])
gnn_list.0.multi_channel_gnn_module.layers.3.linears.0.weight ............................................. torch.Size([32, 32])
gnn_list.0.multi_channel_gnn_module.layers.3.linears.0.bias ................................................... torch.Size([32])
gnn_list.0.multi_channel_gnn_module.layers.3.linears.1.weight ............................................. torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.layers.3.linears.1.bias ................................................... torch.Size([16])
gnn_list.0.multi_channel_gnn_module.layers.4.linears.0.weight ............................................. torch.Size([32, 32])
gnn_list.0.multi_channel_gnn_module.layers.4.linears.0.bias ................................................... torch.Size([32])
gnn_list.0.multi_channel_gnn_module.layers.4.linears.1.weight ............................................. torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.layers.4.linears.1.bias ................................................... torch.Size([16])
gnn_list.0.multi_channel_gnn_module.layers.5.linears.0.weight ............................................. torch.Size([32, 32])
gnn_list.0.multi_channel_gnn_module.layers.5.linears.0.bias ................................................... torch.Size([32])
gnn_list.0.multi_channel_gnn_module.layers.5.linears.1.weight ............................................. torch.Size([16, 32])
gnn_list.0.multi_channel_gnn_module.layers.5.linears.1.bias ................................................... torch.Size([16])
gnn_list.0.translate_mlp.linears.0.weight .................................................................. torch.Size([4, 34])
gnn_list.0.translate_mlp.linears.0.bias ........................................................................ torch.Size([4])
gnn_list.0.translate_mlp.linears.1.weight ................................................................... torch.Size([4, 4])
gnn_list.0.translate_mlp.linears.1.bias ........................................................................ torch.Size([4])
gnn_list.0.translate_mlp.linears.2.weight ................................................................... torch.Size([2, 4])
gnn_list.0.translate_mlp.linears.2.bias ........................................................................ torch.Size([2])
gnn_list.0.translate_mlp.batch_norms.0.weight .................................................................. torch.Size([4])
gnn_list.0.translate_mlp.batch_norms.0.bias .................................................................... torch.Size([4])
gnn_list.0.translate_mlp.batch_norms.1.weight .................................................................. torch.Size([4])
gnn_list.0.translate_mlp.batch_norms.1.bias .................................................................... torch.Size([4])
gnn_list.0.translate_mlp.cond_layers.0.gain ............................................................. torch.Size([32, 1, 4])
gnn_list.0.translate_mlp.cond_layers.0.bias ............................................................. torch.Size([32, 1, 4])
gnn_list.0.translate_mlp.cond_layers.1.gain ............................................................. torch.Size([32, 1, 4])
gnn_list.0.translate_mlp.cond_layers.1.bias ............................................................. torch.Size([32, 1, 4])
gnn_list.1.multi_channel_gnn_module.eps ........................................................................ torch.Size([6])
gnn_list.1.multi_channel_gnn_module.linear_prediction.0.0.weight .......................................... torch.Size([36, 18])
gnn_list.1.multi_channel_gnn_module.linear_prediction.0.0.bias ................................................ torch.Size([36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.0.2.weight .......................................... torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.0.2.bias ................................................ torch.Size([16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.1.0.weight .......................................... torch.Size([36, 16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.1.0.bias ................................................ torch.Size([36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.1.2.weight .......................................... torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.1.2.bias ................................................ torch.Size([16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.2.0.weight .......................................... torch.Size([36, 16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.2.0.bias ................................................ torch.Size([36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.2.2.weight .......................................... torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.2.2.bias ................................................ torch.Size([16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.3.0.weight .......................................... torch.Size([36, 16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.3.0.bias ................................................ torch.Size([36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.3.2.weight .......................................... torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.3.2.bias ................................................ torch.Size([16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.4.0.weight .......................................... torch.Size([36, 16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.4.0.bias ................................................ torch.Size([36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.4.2.weight .......................................... torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.4.2.bias ................................................ torch.Size([16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.5.0.weight .......................................... torch.Size([36, 16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.5.0.bias ................................................ torch.Size([36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.5.2.weight .......................................... torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.5.2.bias ................................................ torch.Size([16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.6.0.weight .......................................... torch.Size([36, 16])
gnn_list.1.multi_channel_gnn_module.linear_prediction.6.0.bias ................................................ torch.Size([36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.6.2.weight .......................................... torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.linear_prediction.6.2.bias ................................................ torch.Size([16])
gnn_list.1.multi_channel_gnn_module.layers.0.linears.0.weight ............................................. torch.Size([36, 36])
gnn_list.1.multi_channel_gnn_module.layers.0.linears.0.bias ................................................... torch.Size([36])
gnn_list.1.multi_channel_gnn_module.layers.0.linears.1.weight ............................................. torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.layers.0.linears.1.bias ................................................... torch.Size([16])
gnn_list.1.multi_channel_gnn_module.layers.1.linears.0.weight ............................................. torch.Size([36, 32])
gnn_list.1.multi_channel_gnn_module.layers.1.linears.0.bias ................................................... torch.Size([36])
gnn_list.1.multi_channel_gnn_module.layers.1.linears.1.weight ............................................. torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.layers.1.linears.1.bias ................................................... torch.Size([16])
gnn_list.1.multi_channel_gnn_module.layers.2.linears.0.weight ............................................. torch.Size([36, 32])
gnn_list.1.multi_channel_gnn_module.layers.2.linears.0.bias ................................................... torch.Size([36])
gnn_list.1.multi_channel_gnn_module.layers.2.linears.1.weight ............................................. torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.layers.2.linears.1.bias ................................................... torch.Size([16])
gnn_list.1.multi_channel_gnn_module.layers.3.linears.0.weight ............................................. torch.Size([36, 32])
gnn_list.1.multi_channel_gnn_module.layers.3.linears.0.bias ................................................... torch.Size([36])
gnn_list.1.multi_channel_gnn_module.layers.3.linears.1.weight ............................................. torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.layers.3.linears.1.bias ................................................... torch.Size([16])
gnn_list.1.multi_channel_gnn_module.layers.4.linears.0.weight ............................................. torch.Size([36, 32])
gnn_list.1.multi_channel_gnn_module.layers.4.linears.0.bias ................................................... torch.Size([36])
gnn_list.1.multi_channel_gnn_module.layers.4.linears.1.weight ............................................. torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.layers.4.linears.1.bias ................................................... torch.Size([16])
gnn_list.1.multi_channel_gnn_module.layers.5.linears.0.weight ............................................. torch.Size([36, 32])
gnn_list.1.multi_channel_gnn_module.layers.5.linears.0.bias ................................................... torch.Size([36])
gnn_list.1.multi_channel_gnn_module.layers.5.linears.1.weight ............................................. torch.Size([16, 36])
gnn_list.1.multi_channel_gnn_module.layers.5.linears.1.bias ................................................... torch.Size([16])
gnn_list.1.translate_mlp.linears.0.weight .................................................................. torch.Size([8, 34])
gnn_list.1.translate_mlp.linears.0.bias ........................................................................ torch.Size([8])
gnn_list.1.translate_mlp.linears.1.weight ................................................................... torch.Size([8, 8])
gnn_list.1.translate_mlp.linears.1.bias ........................................................................ torch.Size([8])
gnn_list.1.translate_mlp.linears.2.weight ................................................................... torch.Size([4, 8])
gnn_list.1.translate_mlp.linears.2.bias ........................................................................ torch.Size([4])
gnn_list.1.translate_mlp.batch_norms.0.weight .................................................................. torch.Size([8])
gnn_list.1.translate_mlp.batch_norms.0.bias .................................................................... torch.Size([8])
gnn_list.1.translate_mlp.batch_norms.1.weight .................................................................. torch.Size([8])
gnn_list.1.translate_mlp.batch_norms.1.bias .................................................................... torch.Size([8])
gnn_list.1.translate_mlp.cond_layers.0.gain ............................................................. torch.Size([32, 1, 8])
gnn_list.1.translate_mlp.cond_layers.0.bias ............................................................. torch.Size([32, 1, 8])
gnn_list.1.translate_mlp.cond_layers.1.gain ............................................................. torch.Size([32, 1, 8])
gnn_list.1.translate_mlp.cond_layers.1.bias ............................................................. torch.Size([32, 1, 8])
gnn_list.2.multi_channel_gnn_module.eps ........................................................................ torch.Size([6])
gnn_list.2.multi_channel_gnn_module.linear_prediction.0.0.weight .......................................... torch.Size([40, 20])
gnn_list.2.multi_channel_gnn_module.linear_prediction.0.0.bias ................................................ torch.Size([40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.0.2.weight .......................................... torch.Size([32, 40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.0.2.bias ................................................ torch.Size([32])
gnn_list.2.multi_channel_gnn_module.linear_prediction.1.0.weight .......................................... torch.Size([40, 16])
gnn_list.2.multi_channel_gnn_module.linear_prediction.1.0.bias ................................................ torch.Size([40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.1.2.weight .......................................... torch.Size([32, 40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.1.2.bias ................................................ torch.Size([32])
gnn_list.2.multi_channel_gnn_module.linear_prediction.2.0.weight .......................................... torch.Size([40, 16])
gnn_list.2.multi_channel_gnn_module.linear_prediction.2.0.bias ................................................ torch.Size([40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.2.2.weight .......................................... torch.Size([32, 40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.2.2.bias ................................................ torch.Size([32])
gnn_list.2.multi_channel_gnn_module.linear_prediction.3.0.weight .......................................... torch.Size([40, 16])
gnn_list.2.multi_channel_gnn_module.linear_prediction.3.0.bias ................................................ torch.Size([40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.3.2.weight .......................................... torch.Size([32, 40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.3.2.bias ................................................ torch.Size([32])
gnn_list.2.multi_channel_gnn_module.linear_prediction.4.0.weight .......................................... torch.Size([40, 16])
gnn_list.2.multi_channel_gnn_module.linear_prediction.4.0.bias ................................................ torch.Size([40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.4.2.weight .......................................... torch.Size([32, 40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.4.2.bias ................................................ torch.Size([32])
gnn_list.2.multi_channel_gnn_module.linear_prediction.5.0.weight .......................................... torch.Size([40, 16])
gnn_list.2.multi_channel_gnn_module.linear_prediction.5.0.bias ................................................ torch.Size([40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.5.2.weight .......................................... torch.Size([32, 40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.5.2.bias ................................................ torch.Size([32])
gnn_list.2.multi_channel_gnn_module.linear_prediction.6.0.weight .......................................... torch.Size([40, 16])
gnn_list.2.multi_channel_gnn_module.linear_prediction.6.0.bias ................................................ torch.Size([40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.6.2.weight .......................................... torch.Size([32, 40])
gnn_list.2.multi_channel_gnn_module.linear_prediction.6.2.bias ................................................ torch.Size([32])
gnn_list.2.multi_channel_gnn_module.layers.0.linears.0.weight ............................................. torch.Size([40, 80])
gnn_list.2.multi_channel_gnn_module.layers.0.linears.0.bias ................................................... torch.Size([40])
gnn_list.2.multi_channel_gnn_module.layers.0.linears.1.weight ............................................. torch.Size([16, 40])
gnn_list.2.multi_channel_gnn_module.layers.0.linears.1.bias ................................................... torch.Size([16])
gnn_list.2.multi_channel_gnn_module.layers.1.linears.0.weight ............................................. torch.Size([40, 64])
gnn_list.2.multi_channel_gnn_module.layers.1.linears.0.bias ................................................... torch.Size([40])
gnn_list.2.multi_channel_gnn_module.layers.1.linears.1.weight ............................................. torch.Size([16, 40])
gnn_list.2.multi_channel_gnn_module.layers.1.linears.1.bias ................................................... torch.Size([16])
gnn_list.2.multi_channel_gnn_module.layers.2.linears.0.weight ............................................. torch.Size([40, 64])
gnn_list.2.multi_channel_gnn_module.layers.2.linears.0.bias ................................................... torch.Size([40])
gnn_list.2.multi_channel_gnn_module.layers.2.linears.1.weight ............................................. torch.Size([16, 40])
gnn_list.2.multi_channel_gnn_module.layers.2.linears.1.bias ................................................... torch.Size([16])
gnn_list.2.multi_channel_gnn_module.layers.3.linears.0.weight ............................................. torch.Size([40, 64])
gnn_list.2.multi_channel_gnn_module.layers.3.linears.0.bias ................................................... torch.Size([40])
gnn_list.2.multi_channel_gnn_module.layers.3.linears.1.weight ............................................. torch.Size([16, 40])
gnn_list.2.multi_channel_gnn_module.layers.3.linears.1.bias ................................................... torch.Size([16])
gnn_list.2.multi_channel_gnn_module.layers.4.linears.0.weight ............................................. torch.Size([40, 64])
gnn_list.2.multi_channel_gnn_module.layers.4.linears.0.bias ................................................... torch.Size([40])
gnn_list.2.multi_channel_gnn_module.layers.4.linears.1.weight ............................................. torch.Size([16, 40])
gnn_list.2.multi_channel_gnn_module.layers.4.linears.1.bias ................................................... torch.Size([16])
gnn_list.2.multi_channel_gnn_module.layers.5.linears.0.weight ............................................. torch.Size([40, 64])
gnn_list.2.multi_channel_gnn_module.layers.5.linears.0.bias ................................................... torch.Size([40])
gnn_list.2.multi_channel_gnn_module.layers.5.linears.1.weight ............................................. torch.Size([16, 40])
gnn_list.2.multi_channel_gnn_module.layers.5.linears.1.bias ................................................... torch.Size([16])
gnn_list.2.translate_mlp.linears.0.weight ................................................................. torch.Size([16, 68])
gnn_list.2.translate_mlp.linears.0.bias ....................................................................... torch.Size([16])
gnn_list.2.translate_mlp.linears.1.weight ................................................................. torch.Size([16, 16])
gnn_list.2.translate_mlp.linears.1.bias ....................................................................... torch.Size([16])
gnn_list.2.translate_mlp.linears.2.weight .................................................................. torch.Size([8, 16])
gnn_list.2.translate_mlp.linears.2.bias ........................................................................ torch.Size([8])
gnn_list.2.translate_mlp.batch_norms.0.weight ................................................................. torch.Size([16])
gnn_list.2.translate_mlp.batch_norms.0.bias ................................................................... torch.Size([16])
gnn_list.2.translate_mlp.batch_norms.1.weight ................................................................. torch.Size([16])
gnn_list.2.translate_mlp.batch_norms.1.bias ................................................................... torch.Size([16])
gnn_list.2.translate_mlp.cond_layers.0.gain ............................................................ torch.Size([32, 1, 16])
gnn_list.2.translate_mlp.cond_layers.0.bias ............................................................ torch.Size([32, 1, 16])
gnn_list.2.translate_mlp.cond_layers.1.gain ............................................................ torch.Size([32, 1, 16])
gnn_list.2.translate_mlp.cond_layers.1.bias ............................................................ torch.Size([32, 1, 16])
gnn_list.3.multi_channel_gnn_module.eps ........................................................................ torch.Size([6])
gnn_list.3.multi_channel_gnn_module.linear_prediction.0.0.weight .......................................... torch.Size([80, 40])
gnn_list.3.multi_channel_gnn_module.linear_prediction.0.0.bias ................................................ torch.Size([80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.0.2.weight .......................................... torch.Size([64, 80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.0.2.bias ................................................ torch.Size([64])
gnn_list.3.multi_channel_gnn_module.linear_prediction.1.0.weight .......................................... torch.Size([80, 16])
gnn_list.3.multi_channel_gnn_module.linear_prediction.1.0.bias ................................................ torch.Size([80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.1.2.weight .......................................... torch.Size([64, 80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.1.2.bias ................................................ torch.Size([64])
gnn_list.3.multi_channel_gnn_module.linear_prediction.2.0.weight .......................................... torch.Size([80, 16])
gnn_list.3.multi_channel_gnn_module.linear_prediction.2.0.bias ................................................ torch.Size([80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.2.2.weight .......................................... torch.Size([64, 80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.2.2.bias ................................................ torch.Size([64])
gnn_list.3.multi_channel_gnn_module.linear_prediction.3.0.weight .......................................... torch.Size([80, 16])
gnn_list.3.multi_channel_gnn_module.linear_prediction.3.0.bias ................................................ torch.Size([80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.3.2.weight .......................................... torch.Size([64, 80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.3.2.bias ................................................ torch.Size([64])
gnn_list.3.multi_channel_gnn_module.linear_prediction.4.0.weight .......................................... torch.Size([80, 16])
gnn_list.3.multi_channel_gnn_module.linear_prediction.4.0.bias ................................................ torch.Size([80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.4.2.weight .......................................... torch.Size([64, 80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.4.2.bias ................................................ torch.Size([64])
gnn_list.3.multi_channel_gnn_module.linear_prediction.5.0.weight .......................................... torch.Size([80, 16])
gnn_list.3.multi_channel_gnn_module.linear_prediction.5.0.bias ................................................ torch.Size([80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.5.2.weight .......................................... torch.Size([64, 80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.5.2.bias ................................................ torch.Size([64])
gnn_list.3.multi_channel_gnn_module.linear_prediction.6.0.weight .......................................... torch.Size([80, 16])
gnn_list.3.multi_channel_gnn_module.linear_prediction.6.0.bias ................................................ torch.Size([80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.6.2.weight .......................................... torch.Size([64, 80])
gnn_list.3.multi_channel_gnn_module.linear_prediction.6.2.bias ................................................ torch.Size([64])
gnn_list.3.multi_channel_gnn_module.layers.0.linears.0.weight ............................................ torch.Size([80, 320])
gnn_list.3.multi_channel_gnn_module.layers.0.linears.0.bias ................................................... torch.Size([80])
gnn_list.3.multi_channel_gnn_module.layers.0.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.3.multi_channel_gnn_module.layers.0.linears.1.bias ................................................... torch.Size([16])
gnn_list.3.multi_channel_gnn_module.layers.1.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.3.multi_channel_gnn_module.layers.1.linears.0.bias ................................................... torch.Size([80])
gnn_list.3.multi_channel_gnn_module.layers.1.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.3.multi_channel_gnn_module.layers.1.linears.1.bias ................................................... torch.Size([16])
gnn_list.3.multi_channel_gnn_module.layers.2.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.3.multi_channel_gnn_module.layers.2.linears.0.bias ................................................... torch.Size([80])
gnn_list.3.multi_channel_gnn_module.layers.2.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.3.multi_channel_gnn_module.layers.2.linears.1.bias ................................................... torch.Size([16])
gnn_list.3.multi_channel_gnn_module.layers.3.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.3.multi_channel_gnn_module.layers.3.linears.0.bias ................................................... torch.Size([80])
gnn_list.3.multi_channel_gnn_module.layers.3.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.3.multi_channel_gnn_module.layers.3.linears.1.bias ................................................... torch.Size([16])
gnn_list.3.multi_channel_gnn_module.layers.4.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.3.multi_channel_gnn_module.layers.4.linears.0.bias ................................................... torch.Size([80])
gnn_list.3.multi_channel_gnn_module.layers.4.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.3.multi_channel_gnn_module.layers.4.linears.1.bias ................................................... torch.Size([16])
gnn_list.3.multi_channel_gnn_module.layers.5.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.3.multi_channel_gnn_module.layers.5.linears.0.bias ................................................... torch.Size([80])
gnn_list.3.multi_channel_gnn_module.layers.5.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.3.multi_channel_gnn_module.layers.5.linears.1.bias ................................................... torch.Size([16])
gnn_list.3.translate_mlp.linears.0.weight ................................................................ torch.Size([32, 136])
gnn_list.3.translate_mlp.linears.0.bias ....................................................................... torch.Size([32])
gnn_list.3.translate_mlp.linears.1.weight ................................................................. torch.Size([32, 32])
gnn_list.3.translate_mlp.linears.1.bias ....................................................................... torch.Size([32])
gnn_list.3.translate_mlp.linears.2.weight ................................................................. torch.Size([16, 32])
gnn_list.3.translate_mlp.linears.2.bias ....................................................................... torch.Size([16])
gnn_list.3.translate_mlp.batch_norms.0.weight ................................................................. torch.Size([32])
gnn_list.3.translate_mlp.batch_norms.0.bias ................................................................... torch.Size([32])
gnn_list.3.translate_mlp.batch_norms.1.weight ................................................................. torch.Size([32])
gnn_list.3.translate_mlp.batch_norms.1.bias ................................................................... torch.Size([32])
gnn_list.3.translate_mlp.cond_layers.0.gain ............................................................ torch.Size([32, 1, 32])
gnn_list.3.translate_mlp.cond_layers.0.bias ............................................................ torch.Size([32, 1, 32])
gnn_list.3.translate_mlp.cond_layers.1.gain ............................................................ torch.Size([32, 1, 32])
gnn_list.3.translate_mlp.cond_layers.1.bias ............................................................ torch.Size([32, 1, 32])
gnn_list.4.multi_channel_gnn_module.eps ........................................................................ torch.Size([6])
gnn_list.4.multi_channel_gnn_module.linear_prediction.0.0.weight ......................................... torch.Size([160, 80])
gnn_list.4.multi_channel_gnn_module.linear_prediction.0.0.bias ............................................... torch.Size([160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.0.2.weight ......................................... torch.Size([64, 160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.0.2.bias ................................................ torch.Size([64])
gnn_list.4.multi_channel_gnn_module.linear_prediction.1.0.weight ......................................... torch.Size([160, 16])
gnn_list.4.multi_channel_gnn_module.linear_prediction.1.0.bias ............................................... torch.Size([160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.1.2.weight ......................................... torch.Size([64, 160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.1.2.bias ................................................ torch.Size([64])
gnn_list.4.multi_channel_gnn_module.linear_prediction.2.0.weight ......................................... torch.Size([160, 16])
gnn_list.4.multi_channel_gnn_module.linear_prediction.2.0.bias ............................................... torch.Size([160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.2.2.weight ......................................... torch.Size([64, 160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.2.2.bias ................................................ torch.Size([64])
gnn_list.4.multi_channel_gnn_module.linear_prediction.3.0.weight ......................................... torch.Size([160, 16])
gnn_list.4.multi_channel_gnn_module.linear_prediction.3.0.bias ............................................... torch.Size([160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.3.2.weight ......................................... torch.Size([64, 160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.3.2.bias ................................................ torch.Size([64])
gnn_list.4.multi_channel_gnn_module.linear_prediction.4.0.weight ......................................... torch.Size([160, 16])
gnn_list.4.multi_channel_gnn_module.linear_prediction.4.0.bias ............................................... torch.Size([160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.4.2.weight ......................................... torch.Size([64, 160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.4.2.bias ................................................ torch.Size([64])
gnn_list.4.multi_channel_gnn_module.linear_prediction.5.0.weight ......................................... torch.Size([160, 16])
gnn_list.4.multi_channel_gnn_module.linear_prediction.5.0.bias ............................................... torch.Size([160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.5.2.weight ......................................... torch.Size([64, 160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.5.2.bias ................................................ torch.Size([64])
gnn_list.4.multi_channel_gnn_module.linear_prediction.6.0.weight ......................................... torch.Size([160, 16])
gnn_list.4.multi_channel_gnn_module.linear_prediction.6.0.bias ............................................... torch.Size([160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.6.2.weight ......................................... torch.Size([64, 160])
gnn_list.4.multi_channel_gnn_module.linear_prediction.6.2.bias ................................................ torch.Size([64])
gnn_list.4.multi_channel_gnn_module.layers.0.linears.0.weight .......................................... torch.Size([160, 1280])
gnn_list.4.multi_channel_gnn_module.layers.0.linears.0.bias .................................................. torch.Size([160])
gnn_list.4.multi_channel_gnn_module.layers.0.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.4.multi_channel_gnn_module.layers.0.linears.1.bias ................................................... torch.Size([16])
gnn_list.4.multi_channel_gnn_module.layers.1.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.4.multi_channel_gnn_module.layers.1.linears.0.bias .................................................. torch.Size([160])
gnn_list.4.multi_channel_gnn_module.layers.1.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.4.multi_channel_gnn_module.layers.1.linears.1.bias ................................................... torch.Size([16])
gnn_list.4.multi_channel_gnn_module.layers.2.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.4.multi_channel_gnn_module.layers.2.linears.0.bias .................................................. torch.Size([160])
gnn_list.4.multi_channel_gnn_module.layers.2.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.4.multi_channel_gnn_module.layers.2.linears.1.bias ................................................... torch.Size([16])
gnn_list.4.multi_channel_gnn_module.layers.3.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.4.multi_channel_gnn_module.layers.3.linears.0.bias .................................................. torch.Size([160])
gnn_list.4.multi_channel_gnn_module.layers.3.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.4.multi_channel_gnn_module.layers.3.linears.1.bias ................................................... torch.Size([16])
gnn_list.4.multi_channel_gnn_module.layers.4.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.4.multi_channel_gnn_module.layers.4.linears.0.bias .................................................. torch.Size([160])
gnn_list.4.multi_channel_gnn_module.layers.4.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.4.multi_channel_gnn_module.layers.4.linears.1.bias ................................................... torch.Size([16])
gnn_list.4.multi_channel_gnn_module.layers.5.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.4.multi_channel_gnn_module.layers.5.linears.0.bias .................................................. torch.Size([160])
gnn_list.4.multi_channel_gnn_module.layers.5.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.4.multi_channel_gnn_module.layers.5.linears.1.bias ................................................... torch.Size([16])
gnn_list.4.translate_mlp.linears.0.weight ................................................................ torch.Size([32, 144])
gnn_list.4.translate_mlp.linears.0.bias ....................................................................... torch.Size([32])
gnn_list.4.translate_mlp.linears.1.weight ................................................................. torch.Size([32, 32])
gnn_list.4.translate_mlp.linears.1.bias ....................................................................... torch.Size([32])
gnn_list.4.translate_mlp.linears.2.weight ................................................................. torch.Size([16, 32])
gnn_list.4.translate_mlp.linears.2.bias ....................................................................... torch.Size([16])
gnn_list.4.translate_mlp.batch_norms.0.weight ................................................................. torch.Size([32])
gnn_list.4.translate_mlp.batch_norms.0.bias ................................................................... torch.Size([32])
gnn_list.4.translate_mlp.batch_norms.1.weight ................................................................. torch.Size([32])
gnn_list.4.translate_mlp.batch_norms.1.bias ................................................................... torch.Size([32])
gnn_list.4.translate_mlp.cond_layers.0.gain ............................................................ torch.Size([32, 1, 32])
gnn_list.4.translate_mlp.cond_layers.0.bias ............................................................ torch.Size([32, 1, 32])
gnn_list.4.translate_mlp.cond_layers.1.gain ............................................................ torch.Size([32, 1, 32])
gnn_list.4.translate_mlp.cond_layers.1.bias ............................................................ torch.Size([32, 1, 32])
gnn_list.5.multi_channel_gnn_module.eps ........................................................................ torch.Size([6])
gnn_list.5.multi_channel_gnn_module.linear_prediction.0.0.weight ......................................... torch.Size([160, 80])
gnn_list.5.multi_channel_gnn_module.linear_prediction.0.0.bias ............................................... torch.Size([160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.0.2.weight ......................................... torch.Size([32, 160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.0.2.bias ................................................ torch.Size([32])
gnn_list.5.multi_channel_gnn_module.linear_prediction.1.0.weight ......................................... torch.Size([160, 16])
gnn_list.5.multi_channel_gnn_module.linear_prediction.1.0.bias ............................................... torch.Size([160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.1.2.weight ......................................... torch.Size([32, 160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.1.2.bias ................................................ torch.Size([32])
gnn_list.5.multi_channel_gnn_module.linear_prediction.2.0.weight ......................................... torch.Size([160, 16])
gnn_list.5.multi_channel_gnn_module.linear_prediction.2.0.bias ............................................... torch.Size([160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.2.2.weight ......................................... torch.Size([32, 160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.2.2.bias ................................................ torch.Size([32])
gnn_list.5.multi_channel_gnn_module.linear_prediction.3.0.weight ......................................... torch.Size([160, 16])
gnn_list.5.multi_channel_gnn_module.linear_prediction.3.0.bias ............................................... torch.Size([160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.3.2.weight ......................................... torch.Size([32, 160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.3.2.bias ................................................ torch.Size([32])
gnn_list.5.multi_channel_gnn_module.linear_prediction.4.0.weight ......................................... torch.Size([160, 16])
gnn_list.5.multi_channel_gnn_module.linear_prediction.4.0.bias ............................................... torch.Size([160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.4.2.weight ......................................... torch.Size([32, 160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.4.2.bias ................................................ torch.Size([32])
gnn_list.5.multi_channel_gnn_module.linear_prediction.5.0.weight ......................................... torch.Size([160, 16])
gnn_list.5.multi_channel_gnn_module.linear_prediction.5.0.bias ............................................... torch.Size([160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.5.2.weight ......................................... torch.Size([32, 160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.5.2.bias ................................................ torch.Size([32])
gnn_list.5.multi_channel_gnn_module.linear_prediction.6.0.weight ......................................... torch.Size([160, 16])
gnn_list.5.multi_channel_gnn_module.linear_prediction.6.0.bias ............................................... torch.Size([160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.6.2.weight ......................................... torch.Size([32, 160])
gnn_list.5.multi_channel_gnn_module.linear_prediction.6.2.bias ................................................ torch.Size([32])
gnn_list.5.multi_channel_gnn_module.layers.0.linears.0.weight .......................................... torch.Size([160, 1280])
gnn_list.5.multi_channel_gnn_module.layers.0.linears.0.bias .................................................. torch.Size([160])
gnn_list.5.multi_channel_gnn_module.layers.0.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.5.multi_channel_gnn_module.layers.0.linears.1.bias ................................................... torch.Size([16])
gnn_list.5.multi_channel_gnn_module.layers.1.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.5.multi_channel_gnn_module.layers.1.linears.0.bias .................................................. torch.Size([160])
gnn_list.5.multi_channel_gnn_module.layers.1.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.5.multi_channel_gnn_module.layers.1.linears.1.bias ................................................... torch.Size([16])
gnn_list.5.multi_channel_gnn_module.layers.2.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.5.multi_channel_gnn_module.layers.2.linears.0.bias .................................................. torch.Size([160])
gnn_list.5.multi_channel_gnn_module.layers.2.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.5.multi_channel_gnn_module.layers.2.linears.1.bias ................................................... torch.Size([16])
gnn_list.5.multi_channel_gnn_module.layers.3.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.5.multi_channel_gnn_module.layers.3.linears.0.bias .................................................. torch.Size([160])
gnn_list.5.multi_channel_gnn_module.layers.3.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.5.multi_channel_gnn_module.layers.3.linears.1.bias ................................................... torch.Size([16])
gnn_list.5.multi_channel_gnn_module.layers.4.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.5.multi_channel_gnn_module.layers.4.linears.0.bias .................................................. torch.Size([160])
gnn_list.5.multi_channel_gnn_module.layers.4.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.5.multi_channel_gnn_module.layers.4.linears.1.bias ................................................... torch.Size([16])
gnn_list.5.multi_channel_gnn_module.layers.5.linears.0.weight ........................................... torch.Size([160, 256])
gnn_list.5.multi_channel_gnn_module.layers.5.linears.0.bias .................................................. torch.Size([160])
gnn_list.5.multi_channel_gnn_module.layers.5.linears.1.weight ............................................ torch.Size([16, 160])
gnn_list.5.multi_channel_gnn_module.layers.5.linears.1.bias ................................................... torch.Size([16])
gnn_list.5.translate_mlp.linears.0.weight ................................................................. torch.Size([32, 80])
gnn_list.5.translate_mlp.linears.0.bias ....................................................................... torch.Size([32])
gnn_list.5.translate_mlp.linears.1.weight ................................................................. torch.Size([32, 32])
gnn_list.5.translate_mlp.linears.1.bias ....................................................................... torch.Size([32])
gnn_list.5.translate_mlp.linears.2.weight .................................................................. torch.Size([8, 32])
gnn_list.5.translate_mlp.linears.2.bias ........................................................................ torch.Size([8])
gnn_list.5.translate_mlp.batch_norms.0.weight ................................................................. torch.Size([32])
gnn_list.5.translate_mlp.batch_norms.0.bias ................................................................... torch.Size([32])
gnn_list.5.translate_mlp.batch_norms.1.weight ................................................................. torch.Size([32])
gnn_list.5.translate_mlp.batch_norms.1.bias ................................................................... torch.Size([32])
gnn_list.5.translate_mlp.cond_layers.0.gain ............................................................ torch.Size([32, 1, 32])
gnn_list.5.translate_mlp.cond_layers.0.bias ............................................................ torch.Size([32, 1, 32])
gnn_list.5.translate_mlp.cond_layers.1.gain ............................................................ torch.Size([32, 1, 32])
gnn_list.5.translate_mlp.cond_layers.1.bias ............................................................ torch.Size([32, 1, 32])
gnn_list.6.multi_channel_gnn_module.eps ........................................................................ torch.Size([6])
gnn_list.6.multi_channel_gnn_module.linear_prediction.0.0.weight .......................................... torch.Size([80, 40])
gnn_list.6.multi_channel_gnn_module.linear_prediction.0.0.bias ................................................ torch.Size([80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.0.2.weight .......................................... torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.0.2.bias ................................................ torch.Size([16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.1.0.weight .......................................... torch.Size([80, 16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.1.0.bias ................................................ torch.Size([80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.1.2.weight .......................................... torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.1.2.bias ................................................ torch.Size([16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.2.0.weight .......................................... torch.Size([80, 16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.2.0.bias ................................................ torch.Size([80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.2.2.weight .......................................... torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.2.2.bias ................................................ torch.Size([16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.3.0.weight .......................................... torch.Size([80, 16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.3.0.bias ................................................ torch.Size([80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.3.2.weight .......................................... torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.3.2.bias ................................................ torch.Size([16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.4.0.weight .......................................... torch.Size([80, 16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.4.0.bias ................................................ torch.Size([80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.4.2.weight .......................................... torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.4.2.bias ................................................ torch.Size([16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.5.0.weight .......................................... torch.Size([80, 16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.5.0.bias ................................................ torch.Size([80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.5.2.weight .......................................... torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.5.2.bias ................................................ torch.Size([16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.6.0.weight .......................................... torch.Size([80, 16])
gnn_list.6.multi_channel_gnn_module.linear_prediction.6.0.bias ................................................ torch.Size([80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.6.2.weight .......................................... torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.linear_prediction.6.2.bias ................................................ torch.Size([16])
gnn_list.6.multi_channel_gnn_module.layers.0.linears.0.weight ............................................ torch.Size([80, 320])
gnn_list.6.multi_channel_gnn_module.layers.0.linears.0.bias ................................................... torch.Size([80])
gnn_list.6.multi_channel_gnn_module.layers.0.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.layers.0.linears.1.bias ................................................... torch.Size([16])
gnn_list.6.multi_channel_gnn_module.layers.1.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.6.multi_channel_gnn_module.layers.1.linears.0.bias ................................................... torch.Size([80])
gnn_list.6.multi_channel_gnn_module.layers.1.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.layers.1.linears.1.bias ................................................... torch.Size([16])
gnn_list.6.multi_channel_gnn_module.layers.2.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.6.multi_channel_gnn_module.layers.2.linears.0.bias ................................................... torch.Size([80])
gnn_list.6.multi_channel_gnn_module.layers.2.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.layers.2.linears.1.bias ................................................... torch.Size([16])
gnn_list.6.multi_channel_gnn_module.layers.3.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.6.multi_channel_gnn_module.layers.3.linears.0.bias ................................................... torch.Size([80])
gnn_list.6.multi_channel_gnn_module.layers.3.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.layers.3.linears.1.bias ................................................... torch.Size([16])
gnn_list.6.multi_channel_gnn_module.layers.4.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.6.multi_channel_gnn_module.layers.4.linears.0.bias ................................................... torch.Size([80])
gnn_list.6.multi_channel_gnn_module.layers.4.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.layers.4.linears.1.bias ................................................... torch.Size([16])
gnn_list.6.multi_channel_gnn_module.layers.5.linears.0.weight ............................................ torch.Size([80, 128])
gnn_list.6.multi_channel_gnn_module.layers.5.linears.0.bias ................................................... torch.Size([80])
gnn_list.6.multi_channel_gnn_module.layers.5.linears.1.weight ............................................. torch.Size([16, 80])
gnn_list.6.multi_channel_gnn_module.layers.5.linears.1.bias ................................................... torch.Size([16])
gnn_list.6.translate_mlp.linears.0.weight ................................................................. torch.Size([16, 40])
gnn_list.6.translate_mlp.linears.0.bias ....................................................................... torch.Size([16])
gnn_list.6.translate_mlp.linears.1.weight ................................................................. torch.Size([16, 16])
gnn_list.6.translate_mlp.linears.1.bias ....................................................................... torch.Size([16])
gnn_list.6.translate_mlp.linears.2.weight .................................................................. torch.Size([4, 16])
gnn_list.6.translate_mlp.linears.2.bias ........................................................................ torch.Size([4])
gnn_list.6.translate_mlp.batch_norms.0.weight ................................................................. torch.Size([16])
gnn_list.6.translate_mlp.batch_norms.0.bias ................................................................... torch.Size([16])
gnn_list.6.translate_mlp.batch_norms.1.weight ................................................................. torch.Size([16])
gnn_list.6.translate_mlp.batch_norms.1.bias ................................................................... torch.Size([16])
gnn_list.6.translate_mlp.cond_layers.0.gain ............................................................ torch.Size([32, 1, 16])
gnn_list.6.translate_mlp.cond_layers.0.bias ............................................................ torch.Size([32, 1, 16])
gnn_list.6.translate_mlp.cond_layers.1.gain ............................................................ torch.Size([32, 1, 16])
gnn_list.6.translate_mlp.cond_layers.1.bias ............................................................ torch.Size([32, 1, 16])
final_read_score.linears.0.weight ........................................................................ torch.Size([120, 60])
final_read_score.linears.0.bias .............................................................................. torch.Size([120])
final_read_score.linears.1.weight ....................................................................... torch.Size([120, 120])
final_read_score.linears.1.bias .............................................................................. torch.Size([120])
final_read_score.linears.2.weight ......................................................................... torch.Size([1, 120])
final_read_score.linears.2.bias ................................................................................ torch.Size([1])
final_read_score.cond_layers.0.gain ................................................................... torch.Size([32, 1, 120])
final_read_score.cond_layers.0.bias ................................................................... torch.Size([32, 1, 120])
final_read_score.cond_layers.1.gain ................................................................... torch.Size([32, 1, 120])
final_read_score.cond_layers.1.bias ................................................................... torch.Size([32, 1, 120])
| 07-01 16:44:56 Parameters Count: 1401513, Trainable: 1401513
| 07-01 16:45:03 [0.0, 0.015625, 0.03125, 0.046875, 0.0625, 0.078125, 0.09375, 0.109375, 0.125, 0.140625, 0.15625, 0.171875, 0.1875, 0.203125, 0.21875, 0.234375, 0.25, 0.265625, 0.28125, 0.296875, 0.3125, 0.328125, 0.34375, 0.359375, 0.375, 0.390625, 0.40625, 0.421875, 0.4375, 0.453125, 0.46875, 0.484375, 0.5], 0.0
| 07-01 16:45:05 epoch: 000| time: 2.1s| train loss: +1.213e+01 | test loss: +nan | 
| 07-01 16:45:05 epoch: 000| train loss i: nan test loss i: nan | 
